fige2<-ggplot(comb2,aes(x=signature,fill=`ST representative`))+
geom_bar(stat="count",position="fill",alpha=0.8) +
facet_wrap(~ Country, nrow=2, strip.position="top") +
xlab("Status")+
ylab("Proportion of subjects")+ #Number of subjects")+
theme_bw() +
theme(legend.text = element_text(size=12), legend.title = element_text(size=14)) +
theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1, size=12)) +
theme(axis.title.x = element_blank()) +
theme(axis.text.y = element_text(size=12)) +
theme(axis.title.y = element_text(size=14)) +
theme(strip.background=element_rect(fill=NA, color=NA),
strip.text=element_text(size=14)) +
labs(fill = "*S. aureus*\nST representative")+
scale_fill_manual(values=palette)+
theme(legend.position="bottom")+
guides(fill=guide_legend(nrow=2,byrow=TRUE))+
theme(plot.title = ggtext::element_markdown())+
theme(legend.title = ggtext::element_markdown())+
guides(fill=guide_legend(nrow=2,byrow=TRUE))
fige2
# load conv ST_min
conv=readRDS("intermediates/conv_STmin_epi.RDS")
conv=as.data.frame(unique(conv[,c("ST","secondary_cluster"),]))
conv$ST_min=conv$ST
conv=rbind.data.frame(conv,c(ST="NF",ST_min="Novel",secondary_cluster="NF"))
# isolate
isolates = read.csv("metadata/Table3.csv", stringsAsFactors = F)
isolates = isolates[which((isolates$QC=="QC Passed")|(isolates$Species=="Staphylococcus epidermidis")),] #keep QCed isolates
isolates = isolates[which(!(isolates$ST=="Failed")),]
isolates$ST = gsub("_epi","",isolates$ST)
isolates = merge(isolates,conv,by="ST",all.x=T) # merge with conv
isolates$val=1
isolates = isolates[,c("Subject","secondary_cluster","val","Country","status","ST_min","Study","ST")]
colnames(isolates)=c("Subject_ID","secondary_cluster","val","Country","status","ST_min","Study","ST")
# metagenome
sourmash = readRDS("intermediates/strain_tracking_global_epidermidis.RDS")
sourmash = sourmash[which(sourmash$Site%in%c("Ac","Ac/cervicalspine","LE","Pc","Upper back/posterior thigh")),]
sourmash$val=1
sourmash = sourmash[,c("Subject_ID","ST","secondary_cluster","val","Country","status", "Study")]
sourmash$ST_min=sourmash$ST
#combine
comb=rbind.data.frame(isolates,sourmash)
comb$ST_min[is.na(comb$ST_min)]="Other"
comb$ST_min=gsub("_epi","",comb$ST_min)
#add SAP vs SEP info
ident_subj=readRDS("intermediates/SAP_vs_SEP_global.rds")
comb=merge(comb,ident_subj[,c("Subject_ID","signature","Study")],by=c("Subject_ID","Study"),all.x=T)
#format
comb$status=gsub(" .*","",comb$status)
comb$ST_min=gsub("NF","Novel",comb$ST_min)
saveRDS(comb,"intermediates/iso_metag_epi_strain_track.rds")
#prop of subject by each ST
comb2=comb %>%
dplyr::group_by(ST_min, Subject_ID, Country, status)%>%
dplyr::mutate(n_ST=n()) %>%
ungroup() %>%
dplyr::group_by(Subject_ID, Country, status)%>%
dplyr::mutate(n_total=n())
comb2=as.data.frame(unique(comb2[,c("ST_min", "Subject_ID", "Country", "status","n_ST","n_total")]))
comb2$prop=comb2$n_ST/comb2$n_total #find prop of subjects by each ST
#find top STs and subset to them
common_ST=comb2%>%
dplyr::count(ST_min) %>%
top_n(14)
comb2$`ST representative`=comb2$ST_min
comb2$`ST representative`[!(comb2$ST_min%in%common_ST$ST)]="Other"
#exclude if less than 10 subjects
numb_subjects=comb2%>%
group_by(Country)%>%
dplyr::summarise(numb_subjects=n_distinct(Subject_ID))
numb_subjects=numb_subjects[which(numb_subjects$numb_subjects>10),]
comb2=merge(comb2,numb_subjects,by=c("Country"))
set.seed(1)
#palette=c(distinctColorPalette(k=n_distinct(comb2$`ST representative`[!(comb2$`ST representative`=="Other")])),"grey")
palette=c("#4E79A7FF","#A0CBE8FF","#F28E2BFF","#FFBE7DFF","#59A14FFF","#8CD17DFF","#B6992DFF","#F1CE63FF","#499894FF","#86BCB6FF","#E15759FF","#FABFD2FF","#D37295FF","grey") # "#9D7660FF", "#D7B5A6FF")"#79706EFF","#BAB0ACFF""#D4A6C8FF",
names(palette)=c(unique(comb2$`ST representative`[!(comb2$`ST representative`=="Other")]),"Other") #"#B07AA1FF",
figd_epi<-ggplot(comb2,aes(x=status,fill=`ST representative`))+
geom_bar(stat="count",position="fill",alpha=0.8) +
facet_wrap(~ Country, nrow=2, strip.position="top") +
xlab("Status")+
ylab("Proportion of subjects")+ #Number of subjects")+
theme_bw() + #scale_fill_manual(values=palette)+
theme(legend.text = element_text(size=12), legend.title = element_text(size=14)) +
theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1, size=12)) +
theme(axis.title.x = element_blank()) +
theme(axis.text.y = element_text(size=12)) +
theme(axis.title.y = element_text(size=14)) +
theme(strip.background=element_rect(fill=NA, color=NA),
strip.text=element_text(size=14)) +
labs(fill = "*S. epidermidis*\nST representative")+scale_fill_manual(values=palette)+
theme(legend.position="right")+theme(plot.title = ggtext::element_markdown())+
theme(legend.title = ggtext::element_markdown())+guides(fill=guide_legend(nrow=2,byrow=TRUE))
figd_epi
comb2=comb
#remove
comb2=comb2[!(is.na(comb2$signature)),] #remove isolates
comb2=comb2[!(comb2$signature=="Other"),] #remove OSP
#prop of subject by each ST
comb2=comb2 %>%
dplyr::group_by(ST_min, Subject_ID, Country, status)%>%
dplyr::mutate(n_ST=n()) %>%
ungroup() %>%
dplyr::group_by(Subject_ID, Country, status)%>%
dplyr::mutate(n_total=n())
comb2=as.data.frame(unique(comb2[,c("ST_min", "Subject_ID", "Country", "status","n_ST","n_total","signature")]))
comb2$prop=comb2$n_ST/comb2$n_total
comb2$`ST representative`=comb2$ST_min
comb2$`ST representative`[!(comb2$ST_min%in%common_ST$ST)]="Other"
comb2$`ST representative`[!(comb2$`ST representative`%in%common_ST$ST)]="Other"
#exclude if less than 10 subjects
numb_subjects=comb2%>%
group_by(Country)%>% #,FLG
dplyr::summarise(numb_subjects=n_distinct(Subject_ID))
numb_subjects=numb_subjects[which(numb_subjects$numb_subjects>10),]
comb2=merge(comb2,numb_subjects,by=c("Country"))
comb2=comb2[!(comb2$status=="Healthy"),]
fige2_epi<-ggplot(comb2,aes(x=signature,fill=`ST representative`))+
geom_bar(stat="count",position="fill",alpha=0.8) +
facet_wrap(~ Country, nrow=2, strip.position="top") +
xlab("Status")+
ylab("Proportion of subjects")+
theme_bw() +
theme(legend.text = element_text(size=12), legend.title = element_text(size=14)) +
theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1, size=12)) +
theme(axis.title.x = element_blank()) +
theme(axis.text.y = element_text(size=12)) +
theme(axis.title.y = element_text(size=14)) +
theme(strip.background=element_rect(fill=NA, color=NA),
strip.text=element_text(size=14)) +
labs(fill = "*S. epidermidis*\nST representative")+
scale_fill_manual(values=palette)+
theme(legend.position="right")+
theme(plot.title = ggtext::element_markdown())+
theme(legend.title = ggtext::element_markdown())+
guides(fill=guide_legend(nrow=3,byrow=TRUE))
fige2_epi
summary_SAP_SEP=comb2%>%group_by(signature,ST_min)%>%
dplyr::summarise(summ=sum(prop))%>%
ungroup()%>%group_by(signature)%>%
dplyr::mutate(summ_tot=sum(summ))
summary_SAP_SEP$prop=summary_SAP_SEP$summ/summary_SAP_SEP$summ_tot
# load input
metadata = read.csv("metadata/Table3.csv", stringsAsFactors = F)
metadata=metadata[,c("run_accession","Country")]
rownames(metadata) = metadata$run_accession
countries = unique(metadata$Country)
ddf = data.frame(matrix(NA, ncol=2, nrow=length(countries)), row.names=countries)
colnames(ddf) = c("country", "samples")
ddf$country = rownames(ddf)
# count metagenomes per country
for (c in ddf$country){
samples = rownames(metadata)[which(metadata$Country == c)]
ddf[c,2] = length(samples)
}
ddf$samples_class = NA
ddf$samples_class[which(ddf$samples >=250)] = "250"
ddf$samples_class[which(ddf$samples >500)] = "500"
ddf$samples_class[which(ddf$samples > 1000)] = ">1000"
ddf$samples_class[which(is.na(ddf$samples_class))] = "<100"
ddf$samples_class = factor(ddf$samples_class, levels=c("<100", "250", "500", ">1000"))
# edit world map template
data(wrld_simpl)
wrld_simpl@data$id <- wrld_simpl@data$NAME
wrld = fortify(wrld_simpl, region="id")
wrld = subset(wrld, id != "Antarctica")
xlim <- c(98, 106)
ylim <- c(-1, 5)
# plot map
map.plot_a = ggplot() +
geom_map(data=wrld, map=wrld, aes(map_id=id, x=long, y=lat), fill="white", color="darkgrey", size=0.1) +
geom_map(data=ddf, map=wrld, aes(map_id=country, fill=samples_class),  color="black", size=0.2, alpha=0.7) +
scale_fill_manual(values=c("#EDF8E9","#BAE4B3","#74C476","#238B45"), name="Number of genomes") +
coord_map() +
labs(x="", y="") +
geom_rect(data=data.frame(),
aes(xmin=xlim[1], xmax=xlim[2], ymin=ylim[1], ymax=ylim[2]),
color="black", fill=NA)+
theme(panel.background = element_rect(fill = "#ECECEC"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_rect(colour = "black", size=0.2, fill=NA),
axis.text = element_blank(),
axis.ticks = element_blank(),
legend.position = "bottom")
map.plot_a_singapore<-map.plot_a %>%
ggdraw() +
draw_plot(
{
map.plot_a +
coord_sf(
xlim = c(103, 105),
ylim = c(0, 2),
expand = FALSE) +
theme(legend.position = "none")+ theme(axis.title = element_blank(),strip.text = element_text(size = rel(3.0), vjust = -4.0))
},
x = 0.73,
y = 0.2,
width = 0.3,
height = 0.3)
map.plot_a_singapore
# load input
metadata = read.csv("metadata/Table2.csv",stringsAsFactors = F)
metadata=metadata[,c("Sample_ID","Country")]
rownames(metadata) = metadata$run_accession
countries = unique(metadata$Country)
ddf = data.frame(matrix(NA, ncol=2, nrow=length(countries)), row.names=countries)
colnames(ddf) = c("country", "samples")
ddf$country = rownames(ddf)
# count metagenomes per country
for (c in ddf$country){
samples = rownames(metadata)[which(metadata$Country == c)]
ddf[c,2] = length(samples)
}
ddf$samples_class = NA
ddf$samples_class[which(ddf$samples >=100)] = "100"
ddf$samples_class[which(ddf$samples >250)] = "250"
ddf$samples_class[which(ddf$samples > 500)] = ">500"
ddf$samples_class[which(is.na(ddf$samples_class))] = "<50"
ddf$samples_class = factor(ddf$samples_class, levels=c("<50", "100", "250", ">500"))
# edit world map template
data(wrld_simpl)
wrld_simpl@data$id <- wrld_simpl@data$NAME
wrld = fortify(wrld_simpl, region="id")
wrld = subset(wrld, id != "Antarctica")
# plot map
map.plot_b = ggplot() +
geom_map(data=wrld, map=wrld, aes(map_id=id, x=long, y=lat), fill="white", color="darkgrey", size=0.1) +
geom_map(data=ddf, map=wrld, aes(map_id=country, fill=samples_class),  color="black", size=0.2, alpha=0.7) +
scale_fill_manual(values=c("#EFF3FF","#BDD7E7","#6BAED6","#2171B5"), name="Number of metagenomes") +
coord_map() +
labs(x="", y="") +
geom_rect(data=data.frame(),
aes(xmin=xlim[1], xmax=xlim[2], ymin=ylim[1], ymax=ylim[2]),
color="black", fill=NA)+
theme(panel.background = element_rect(fill = "#ECECEC"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_rect(colour = "black", size=0.2, fill=NA),
axis.text = element_blank(),
axis.ticks = element_blank(),
legend.position = "bottom")
map.plot_b_singapore<-map.plot_b %>%
ggdraw() +
draw_plot(
{
map.plot_b +
coord_sf(
xlim = c(103, 105),
ylim = c(0, 2),
expand = FALSE) +
theme(legend.position = "none")+ theme(axis.title = element_blank(),strip.text = element_text(size = rel(3.0), vjust = -4.0))
},
x = 0.73,
y = 0.2,
width = 0.3,
height = 0.3)
map.plot_b_singapore
panel1<-cowplot::plot_grid(map.plot_a_singapore,map.plot_b_singapore,NULL,nrow=2,labels=c("A","B"),rel_heights = c(0.4,0.4,0.1))
leg<-get_legend(figd)
leg2<-get_legend(fige2_epi)
fige2_2<-plot_grid(fige2+theme(legend.position="none"),NULL)
fige2_epi_2<-plot_grid(fige2_epi+theme(legend.position="none"),NULL)
panel2<-plot_grid(figd+theme(legend.position="none"),fige2_2,leg,nrow=3,labels=c("C","D",""),rel_heights = c(0.4,0.4,0.1))
panel3<-plot_grid(figd_epi+theme(legend.position="none"),fige2_epi_2,leg2,nrow=3,labels=c("E","F",""),rel_heights = c(0.4,0.4,0.1))
chunk<-plot_grid(panel2,panel3,rel_widths=c(0.65,0.35),nrow=1)
final<-cowplot::plot_grid(panel1,chunk,rel_widths=c(0.40,0.6),nrow=1)
ggsave("figures/FigureS6.png",final,width=18,height=11.5, bg='white')
ggsave("figures/FigureS6.svg",final,width=18,height=11.5, bg='white')
panel1<-cowplot::plot_grid(map.plot_a_singapore,map.plot_b_singapore,NULL,nrow=3,labels=c("A","B",""),rel_heights = c(0.4,0.4,0.1))
leg<-get_legend(figd)
leg2<-get_legend(fige2_epi)
fige2_2<-plot_grid(fige2+theme(legend.position="none"),NULL)
fige2_epi_2<-plot_grid(fige2_epi+theme(legend.position="none"),NULL)
panel2<-plot_grid(figd+theme(legend.position="none"),fige2_2,leg,nrow=3,labels=c("C","D",""),rel_heights = c(0.4,0.4,0.1))
panel3<-plot_grid(figd_epi+theme(legend.position="none"),fige2_epi_2,leg2,nrow=3,labels=c("E","F",""),rel_heights = c(0.4,0.4,0.1))
chunk<-plot_grid(panel2,panel3,rel_widths=c(0.65,0.35),nrow=1)
final<-cowplot::plot_grid(panel1,chunk,rel_widths=c(0.40,0.6),nrow=1)
ggsave("figures/FigureS6.png",final,width=18,height=11.5, bg='white')
ggsave("figures/FigureS6.svg",final,width=18,height=11.5, bg='white')
# load conv ST_min
conv=readRDS("intermediates/conv_STmin_aureus.RDS")
conv=as.data.frame(unique(conv[,c("ST","ST_min","secondary_cluster"),]))
conv=rbind.data.frame(conv,c(ST="NF",ST_min="Novel",secondary_cluster="NF"))
# isolate
isolates = read.csv("metadata/Table3.csv",stringsAsFactors = F)
isolates = isolates[which((isolates$QC=="QC Passed")|(isolates$Species=="Staphylococcus aureus")),] #keep QCed isolates
isolates = isolates[which(!(isolates$ST=="Failed")),] #exclude those where mlst typing failed
isolates$ST = gsub("_aur","",isolates$ST)
isolates = merge(isolates,conv,by="ST",all.x=T)
isolates$val=1
isolates = isolates[,c("Subject","secondary_cluster","val","Country","status","ST_min","Study")]
colnames(isolates)[1]="Subject_ID"
# metagenome
sourmash = readRDS("intermediates/strain_tracking_global_aureus.RDS")
sourmash = sourmash[,c("Subject_ID","ST_min","secondary_cluster","val","Country","status", "Study")]
#combine
comb=rbind.data.frame(isolates,sourmash)
comb$ST_min[is.na(comb$ST_min)]="Other"
#add SAP vs SEP info
ident_subj=readRDS("intermediates/SAP_vs_SEP_global.rds")
comb=merge(comb,ident_subj[,c("Subject_ID","signature","Study")],by=c("Subject_ID","Study"),all.x=T)
#format
comb$status=gsub(" .*","",comb$status)
comb$Subject_nonredun=paste(comb$Subject_ID,comb$Study,sep="__")
saveRDS(comb,"intermediates/iso_metag_aureus_strain_track.rds")
rm(list=ls())
# load libraries
library(grid)
library(rgdal)
library(rgeos)
library(gpclib)
library(maptools)
library(mapproj)
library(randomcoloR)
library(ggplot2)
library(dplyr)
library(cowplot)
library(funrar)
library(reshape2)
library(Maaslin2)
setwd("~/Documents/AD_staph_diversity/R_results_intermediates/")
# load GTDB and subset to staph and reformat
gtdb.bac_genus=read.csv("metadata/SMGC_GTDB.csv",stringsAsFactors = F)
colnames(gtdb.bac_genus)=c("Identifier","Phylum","Genus","Species")
gtdb.bac_staph=gtdb.bac_genus[which(gtdb.bac_genus$Genus=="g__Staphylococcus"),]
# read in unique counts
otu=data.matrix(readRDS("results/readmapping/readmapping_SMGC_unique_reads.RDS"))
relabund=t(make_relative(t(otu)))
# melt
y4 <- melt(data.matrix(relabund))
colnames(y4)=c("Identifier","Sample_ID","relabund")
# merge with metadata
metadata=read.csv("metadata/Table2.csv",stringsAsFactors = F)
metadata$Timepoint=sub("-[^-]+$", "", metadata$visit_rank)
metadata$Subject_nonredun=paste(metadata$Subject_ID,metadata$Study,sep="__")
#remove non-flare, healthy children, and non-disease sites
metadata=metadata%>%filter(!(metadata$Timepoint%in%c("baseline","post-flare","V0")))%>%
filter(grepl("AD",status))%>%
filter(Site%in%c("Ac","Ac/cervicalspine","LE","Pc","Upper back/posterior thigh"))
y4=merge(metadata,y4,by="Sample_ID")
# merge with gtdb species data
otu=merge(y4,gtdb.bac_staph,by="Identifier")
#summarise and identify signature
otu=otu%>%group_by(Subject_ID,Species,Country,Study)%>%dplyr::summarise(mean_relabund=mean(relabund))
ident_subj=otu%>%
group_by(Subject_ID) %>%
slice(which.max(mean_relabund))
ident_subj$signature="Other"
ident_subj$signature[grepl("epidermidis",ident_subj$Species)]="SEP"
ident_subj$signature[grepl("aureus",ident_subj$Species)]="SAP"
ident_subj$signature[grepl("argen",ident_subj$Species)]="SAP"
saveRDS(ident_subj,"intermediates/SAP_vs_SEP_global.rds")
# load conv ST_min
conv=readRDS("intermediates/conv_STmin_aureus.RDS")
conv=as.data.frame(unique(conv[,c("ST","ST_min","secondary_cluster"),]))
conv=rbind.data.frame(conv,c(ST="NF",ST_min="Novel",secondary_cluster="NF"))
# isolate
isolates = read.csv("metadata/Table3.csv",stringsAsFactors = F)
isolates = isolates[which((isolates$QC=="QC Passed")|(isolates$Species=="Staphylococcus aureus")),] #keep QCed isolates
isolates = isolates[which(!(isolates$ST=="Failed")),] #exclude those where mlst typing failed
isolates$ST = gsub("_aur","",isolates$ST)
isolates = merge(isolates,conv,by="ST",all.x=T)
isolates$val=1
isolates = isolates[,c("Subject","secondary_cluster","val","Country","status","ST_min","Study")]
colnames(isolates)[1]="Subject_ID"
# metagenome
sourmash = readRDS("intermediates/strain_tracking_global_aureus.RDS")
sourmash = sourmash[,c("Subject_ID","ST_min","secondary_cluster","val","Country","status", "Study")]
#combine
comb=rbind.data.frame(isolates,sourmash)
comb$ST_min[is.na(comb$ST_min)]="Other"
#add SAP vs SEP info
ident_subj=readRDS("intermediates/SAP_vs_SEP_global.rds")
comb=merge(comb,ident_subj[,c("Subject_ID","signature","Study")],by=c("Subject_ID","Study"),all.x=T)
#format
comb$status=gsub(" .*","",comb$status)
comb$Subject_nonredun=paste(comb$Subject_ID,comb$Study,sep="__")
saveRDS(comb,"intermediates/iso_metag_aureus_strain_track.rds")
comb2=comb %>%
dplyr::group_by(ST_min, Subject_ID, Country, status,Subject_nonredun)%>%
dplyr::mutate(n_ST=n()) %>%
ungroup() %>%
dplyr::group_by(Subject_ID, Country, status,Subject_nonredun)%>%
dplyr::mutate(n_total=n())
comb2=as.data.frame(unique(comb2[,c("ST_min", "Subject_ID", "Subject_nonredun","Country", "status","n_ST","n_total")]))
comb2$prop=comb2$n_ST/comb2$n_total #find prop of each subject by each ST
comb2
View(comb2)
comb=readRDS("intermediates/iso_metag_aureus_strain_track.rds")
comb=readRDS("intermediates/iso_metag_aureus_strain_track.rds")%>%
filter(Country=="United States")
n_distinct(comb$Subject_ID)
unique(comb$Subject_ID)
comb=readRDS("intermediates/iso_metag_aureus_strain_track.rds")%>%
filter(Country=="United States")%>%group_by(ST)%>%
dplyr::summarise(n_incidence=n_distinct(Subject_ID))
comb=readRDS("intermediates/iso_metag_aureus_strain_track.rds")%>%
filter(Country=="United States")%>%group_by(ST_min)%>%
dplyr::summarise(n_incidence=n_distinct(Subject_ID))
View(comb)
#Of the 45 USA subjects for whom we had S. aureus ST predictions, the prevalent S. aureus strains were ST5 (n=11 subjects, 25%), ST8 (n=10 subjects, 23%), ST59 (n=7 subjects, 16%), and ST30 (n=6 subjects, 14%).
comb=readRDS("intermediates/iso_metag_aureus_strain_track.rds")%>%
filter(Country=="United States")
comb_summ=comb%>%group_by(ST_min)%>%
dplyr::summarise(n_incidence=n_distinct(Subject_ID))
comb_summ$prop=comb_summ$n_incidence/n_distinct(comb$Subject_ID)
comb_summ
View(comb_summ)
#Of the 45 USA subjects for whom we had S. aureus ST predictions, the prevalent S. aureus strains were ST5 (n=11 subjects, 25%), ST8 (n=10 subjects, 23%), ST59 (n=7 subjects, 16%), and ST30 (n=6 subjects, 14%).
comb=readRDS("intermediates/iso_metag_aureus_strain_track.rds")%>%
filter(Country=="United States")%>%filter(Species=="Staphylococcus aureus")
comb=readRDS("intermediates/iso_metag_aureus_strain_track.rds")%>%
filter(Country=="United States")
#Of the 45 USA subjects for whom we had S. aureus ST predictions, the prevalent S. aureus strains were ST5 (n=11 subjects, 25%), ST8 (n=10 subjects, 23%), ST59 (n=7 subjects, 16%), and ST30 (n=6 subjects, 14%).
comb=readRDS("intermediates/iso_metag_aureus_strain_track.rds")%>%
filter(Country=="United States")
comb_summ=comb%>%group_by(ST_min)%>%
dplyr::summarise(n_incidence=n_distinct(Subject_ID))
comb_summ$prop=comb_summ$n_incidence/n_distinct(comb$Subject_ID)
comb_summ
View(comb_summ)
comb=readRDS("intermediates/iso_metag_aureus_strain_track.rds")%>%
filter(Country=="United States")
comb_summ=comb%>%group_by(ST_min)%>%
dplyr::summarise(n_incidence=n_distinct(Subject_ID))
comb_summ$prop=comb_summ$n_incidence/n_distinct(comb$Subject_ID)
comb_summ
setwd("~/Documents/AD_staph_diversity/R_results_intermediates/")
metadata=read.csv("metadata/Table1.csv", stringsAsFactors = F)
metadata$Timepoint=sub("-[^-]+$", "", metadata$visit_rank)
table(metadata$Timepoint)
ad_flare=metadata[which((metadata$status=="AD child")&(metadata$Timepoint=="flare")),] #AD flare
summary(na.omit(ad_flare$scorad))
comb=readRDS("~/Documents/AD_staph_diversity/intermediates/iso_metag_aureus_strain_track.rds")
comb=readRDS("~/Documents/AD_staph_diversity/R_results_intermediates/intermediates/iso_metag_aureus_strain_track.rds")
#Of the 44 USA subjects for which we had S. aureus ST predictions, the prevalent S. aureus strains were ST5 (n=11, 25%), ST8 (n=8, 18%), ST59 (n=7, 16%), and ST30 (n=6, 14%).
US_comb=comb[which(comb$Country=="United States"),]%>%select("Subject_nonredun","ST_min")
n_tot=n_distinct(US_comb$Subject_nonredun)
US_comb=as.data.frame(unique(US_comb))%>%group_by(ST_min)%>%dplyr::summarise(n=n())%>%arrange(desc(n))
US_comb$prop=US_comb$n/n_tot
US_comb
#Though abundant in the European continent and Singapore (n=38, 14%), S. aureus ST1 was absent in the United States (n=0 subjects)
continents=cbind(data.frame(Country=c("Denmark","United Kingdom","Singapore","United States","Mexico","India","Germany")),data.frame(continent=c("Europe","Europe","Asia","North America","North America","Asia","Europe")))
europe_sing=comb[which(comb$Country%in%c(continents$Country[continents$continent=="Europe"],"Singapore")),]%>%select("Subject_nonredun","ST_min","Country")
n_tot=n_distinct(europe_sing$Subject_nonredun)
europe_sing=as.data.frame(unique(europe_sing))%>%group_by(ST_min)%>%dplyr::summarise(n=n())%>%arrange(desc(n))
europe_sing
comb_sing=comb%>%select("Subject_nonredun","ST_min","signature")
comb_sing=as.data.frame(unique(comb_sing[comb_sing$signature%in%c("SAP","SEP"),]))
comb_sing_ST=comb_sing%>%group_by(ST_min,signature)%>%
summarise(n = n())
comb_sing_tot=comb_sing%>%group_by(signature)%>%dplyr::summarise(tot=n_distinct(Subject_nonredun))
comb_vf=merge(comb_sing_ST,comb_sing_tot,by=c("signature"))
comb_vf$prop=comb_vf$n/comb_vf$tot
comb=readRDS("~/Documents/AD_staph_diversity/R_results_intermediates/intermediates/iso_metag_aureus_strain_track.rds")
#Of the 44 USA subjects for which we had S. aureus ST predictions, the prevalent S. aureus strains were ST5 (n=11, 25%), ST8 (n=8, 18%), ST59 (n=7, 16%), and ST30 (n=6, 14%).
US_comb=comb[which(comb$Country=="United States"),]%>%select("Subject_nonredun","ST_min")
n_tot=n_distinct(US_comb$Subject_nonredun)
US_comb=as.data.frame(unique(US_comb))%>%group_by(ST_min)%>%dplyr::summarise(n=n())%>%arrange(desc(n))
US_comb$prop=US_comb$n/n_tot
US_comb
continents=cbind(data.frame(Country=c("Denmark","United Kingdom","Singapore","United States","Mexico","India","Germany")),data.frame(continent=c("Europe","Europe","Asia","North America","North America","Asia","Europe")))
europe_sing=comb[which(comb$Country%in%c(continents$Country[continents$continent=="Europe"],"Singapore")),]%>%select("Subject_nonredun","ST_min","Country")
n_tot=n_distinct(europe_sing$Subject_nonredun)
europe_sing=as.data.frame(unique(europe_sing))%>%group_by(ST_min)%>%dplyr::summarise(n=n())%>%arrange(desc(n))
europe_sing
comb_sing=comb%>%select("Subject_nonredun","ST_min","signature")
comb_sing=as.data.frame(unique(comb_sing[comb_sing$signature%in%c("SAP","SEP"),]))
comb_sing_ST=comb_sing%>%group_by(ST_min,signature)%>%
summarise(n = n())
comb_sing_ST
comb_sing_tot=comb_sing%>%group_by(signature)%>%dplyr::summarise(tot=n_distinct(Subject_nonredun))
comb_vf=merge(comb_sing_ST,comb_sing_tot,by=c("signature"))
comb_vf$prop=comb_vf$n/comb_vf$tot
comb_vf
View(comb_vf)
ident_subj=readRDS("~/Documents/AD_staph_diversity/R_results_intermediates/intermediates/SAP_vs_SEP_global.rds")
nrow(ident_subj)
table(ident_subj$signature)
metadata=read.csv("metadata/Table3.csv", stringsAsFactors = F)%>%filter(Country=="Singapore")
metadata=read.csv("~/Documents/AD_staph_diversity/R_results_intermediates/metadata/Table3.csv", stringsAsFactors = F)%>%filter(Country=="Singapore")
n_distinct(metadata$Subject)
metadata=read.csv("~/Documents/AD_staph_diversity/R_results_intermediates/metadata/Table3.csv", stringsAsFactors = F)%>%filter((Country=="Singapore")|(Country=="United States"))
n_distinct(metadata$Subject)
metadata=read.csv("~/Documents/AD_staph_diversity/R_results_intermediates/metadata/Table3.csv", stringsAsFactors = F)%>%filter((Country=="Singapore")|(Country=="United States"))
subjects=as.data.frame(unique(metadata[,c("Subject","Country")]))
metadata=read.csv("~/Documents/AD_staph_diversity/R_results_intermediates/metadata/Table3.csv", stringsAsFactors = F)%>%filter((Country=="Singapore")|(Country=="United States"))
subjects=as.data.frame(unique(metadata[,c("Subject","Country","status")]))
table(subjects$status)
35+46
View(comb)
comb%>%filter((Country=="Singapore")|(Country=="United States"))
comb=comb%>%filter((Country=="Singapore")|(Country=="United States"))
subjects=as.data.frame(unique(metadata[,c("Subject","Country","status")]))
View(subjects)
subjects=as.data.frame(unique(comb[,c("Subject","Country","status")]))
subjects=as.data.frame(unique(comb[,c("Subject_ID","Country","status")]))
View(subjects)
table(subjects$status)
comb=comb%>%filter((Country=="Singapore")|(Country=="United States"))
subjects=as.data.frame(unique(comb[,c("Subject_ID","Country","status")]))
nrow(comb)
table(subjects$status)
comb=readRDS("~/Documents/AD_staph_diversity/R_results_intermediates/intermediates/iso_metag_epi_strain_track.rds")
comb=comb%>%filter((Country=="Singapore")|(Country=="United States"))
subjects=as.data.frame(unique(comb[,c("Subject_ID","Country","status")]))
nrow(comb)
comb=readRDS("~/Documents/AD_staph_diversity/R_results_intermediates/intermediates/iso_metag_epi_strain_track.rds")
comb=comb%>%filter((Country=="Singapore")|(Country=="United States"))
subjects=as.data.frame(unique(comb[,c("Subject_ID","Country","status")]))
nrow(subjects)
table(subjects$status)
unique(subjects)
